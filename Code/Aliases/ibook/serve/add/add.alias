multiline
<drac2>


def search_list(query: str, item_list: list[str]) -> list[str]|None:
    """
    Searches for item in list.

    Args:
        query (str): The query being made
        item_list (list): List of items

    Return:
        list[str]|None: If it finds at least one match, it returns the item(s) in a list, otherwise it returns None
    """

    # Finds at least 1 match
    if len(item_results := [item for item in item_list if query.lower() in item.lower()]) > 0:
        return item_results

    # If it finds no matches
    else:
        return None


def add_to_svar_list(input_list: list[str], uvar_list: list[str]) -> tuple(str, str, str, str, str):
    """
    Handles adding to svar list from the uvar list

    Args:
        input_list (list[str]): Sources being added to the svar
        uvar_list (list[str]): Subbed sources

    Return:
        str: SVAR update string
        str: Title
        str: Content
        str: Image URL
        str: Color Hex Code
    """

    # Mapping table for codes
    shorthand_items = {
        "Acquisition's Incorporated (ai)": "ai",
        "Elemental Evil Player's Companion (eepc)": "eepc",
        "Explorer's Guide to Wildemount (egtw)": "egtw",
        "Fizban's Treasury of Dragons (ftod)": "ftod",
        "Guildmasters' Guide to Ravnica (ggtr)": "ggtr",
        "Icewind Dale Rime of the Frostmaiden (idrotf)": "idrotf",
        "Lost Laboratory of Kwalish (llok)": "llok",
        "Player's Handbook (phb)": "phb",
        "Spelljammer Adventures in Space (sacoc)": "sacoc",
        "Strixhaven: A Curriculum of Chaos (sais)": "sais",
        "Sword Coast Adventurer's Guide (scag)": "scag",
        "Tasha's Cauldron of Everything (tcoe)": "tcoe",
        "Tal'Dorei Campaign Setting Reborn (tcsr)": "tcsr",
        "Xanathar's Guide to Everything (xgte)": "xgte" 
    }

    # If SVAR exists, load dictionary
    if (svar_test := get_svar('ibook_settings')):
        svar_dict = load_json(svar_test)

        # If Books key in dictionary
        if "Books" in svar_dict.keys():
            pass

        # If Books key not in dictionary
        else:
            svar_dict['Books'] = []

    # If SVAR does not exist, create dictionary
    else:
        svar_dict = {"Settings": {"Homebrew": False, "Partnered Content": True, "Book Limit": 6, "Expanded Class": True}, "Books": []}

    # Removes already existing sources
    input_list = list(set(input_list) - set(svar_dict['Books']))

    # Grabs image_codes for the thumbnail
    image_codes = [shorthand_items[source] for source in svar_dict['Books'] if source in shorthand_items]

    # If there are image codes
    if len(image_codes) > 0:
        pass

    # If there are not image codes
    else:
        image_codes.append("")

    
    # If there was at least 1 unique source being served
    if len(input_list) > 0:
        pass
        
    # If there were no unique sources being served
    else:
        return "", "You Have Added to the Server's Sources", "**Served Sources:**\nNone", f"https://raw.githubusercontent.com/SethHartman13/Magic-Book-Library/main/Code/Images/{randchoice(image_codes)}.png", ""

    # Adds sources to SVAR dict
    for source in input_list:
        svar_dict['Books'].append(source)

    return f"!svar ibook_settings {dump_json(svar_dict)}", "You Have Added to the Server's Sources", "**Served Sources:**\n" + "\n".join(input_list), f"https://raw.githubusercontent.com/SethHartman13/Magic-Book-Library/main/Code/Images/{randchoice([shorthand_items[source] for source in svar_dict['Books'] if source in shorthand_items])}.png", ""


def main(input_list: list[str]) -> str:
    """
    Main program function

    Args:
        input_list (list[str]): List of user inputs

    Return:
        str: Restult
    """

    # If there was at least one input
    if len(input_list) > 0:

        # If UVAR exists, load list
        if (uvar_test := get_uvar("ibook_source_list")):
            uvar_list = load_json(uvar_test)

        # If UVER does not exist
        else:
            return "", "You Have Been Sneak Attacked by an Error", "You are not subscribed to any content", f'https://raw.githubusercontent.com/SethHartman13/Magic-Book-Library/main/Code/Images/no_wizard.png', "#cf142b"

    # If there were no inputs
    else:
        return "", "You Have Been Sneak Attacked by an Error", "Expected at least one argument", f'https://raw.githubusercontent.com/SethHartman13/Magic-Book-Library/main/Code/Images/no_wizard.png', "#cf142b" 

    # If 'all' parameter is passed
    if "all" in input_list[0].lower():
        return add_to_svar_list(uvar_list, uvar_list)

    # If 'all' parameter is not passed
    else:

        # If the source exists
        if (key_result := search_list(input_list[0], uvar_list)):

            # If it only finds exactly one match
            if len(key_result) == 1:
                return add_to_svar_list(key_result, uvar_list)

            # If it finds more than one match, go through each match
            else:
                for key in key_result:

                    # If it is not an exact match
                    if key.lower() != input_list[0].lower():
                        pass

                    # If it is an exact match
                    else:
                        return add_to_svar_list([key], uvar_list)

                key_result.insert(0, "**Multiple Sources Found:**")

                return "", "You Have Been Sneak Attacked by an Error", "\n".join(key_result), f'https://raw.githubusercontent.com/SethHartman13/Magic-Book-Library/main/Code/Images/no_wizard.png', "#cf142b"

        # If the source does not exist
        else:
            return "", "You Have Been Sneak Attacked by an Error", "Source not found", f'https://raw.githubusercontent.com/SethHartman13/Magic-Book-Library/main/Code/Images/no_wizard.png', "#cf142b"


# Main program function
svar_str, title, f, thumb, color = main(&ARGS&)
l = "<"

</drac2>
{{svar_str}}
!embed -title "{{title}}" -f "{{f}}" -thumb "{{thumb}}" -color "{{color}}" -footer "!ibook serve add [source/all] | Updated 12/7/23 | ShadowsStride"