multiline
<drac2>


def search_list(query: str, item_list: list[str]) -> list[str]|None:
    """
    Searches for item in list.

    Args:
        query (str): The query being made
        item_list (list): List of items

    Return:
        list[str]|None: If it finds at least one match, it returns the item(s) in a list, otherwise it returns None
    """

    # Finds at least 1 match
    if len(item_results := [item for item in item_list if query.lower() in item.lower()]) > 0:
        return item_results

    # If it finds no matches
    else:
        return None


def add_to_svar_list(input_list: list[str], uvar_list: list[str]) -> str:

    shorthand_items = {
        "Acquisition's Incorporated (ai)": "ai",
        "Elemental Evil Player's Companion (eepc)": "eepc",
        "Explorer's Guide to Wildemount (egtw)": "egtw",
        "Fizban's Treasury of Dragons (ftod)": "ftod",
        "Guildmasters' Guide to Ravnica (ggtr)": "ggtr",
        "Icewind Dale Rime of the Frostmaiden (idrotf)": "idrotf",
        "Lost Laboratory of Kwalish (llok)": "llok",
        "Player's Handbook (phb)": "phb",
        "Spelljammer Adventures in Space (sacoc)": "sacoc",
        "Strixhaven: A Curriculum of Chaos (sais)": "sais",
        "Sword Coast Adventurer's Guide (scag)": "scag",
        "Tasha's Cauldron of Everything (tcoe)": "tcoe",
        "Tal'Dorei Campaign Setting Reborn (tcsr)": "tcsr",
        "Xanathar's Guide to Everything (xgte)": "xgte" 
    }

    if (svar_test := get_svar('ibook_settings')):
        svar_dict = load_json(svar_test)

        if "Books" in svar_dict.keys():
            pass

        else:
            svar_dict['Books'] = []

    else:
        svar_dict = {'Settings': {}, 'Books': []}

    for item in svar_dict['Books']:
        if item in input_list:
            input_list.remove(item)

        else:
            pass

    image_codes = [shorthand_items[source] for source in svar_dict['Books'] if source in shorthand_items]

    if len(image_codes) == 0:
        image_codes.append("")

    else:
        pass

    if len(input_list) > 0:
        pass
        
    else:
        return "", f"{ctx.author.display_name} adds to the server's sources", "**Served Sources:**\nNone", f"https://raw.githubusercontent.com/SethHartman13/Magic-Book-Library/main/Code/Images/{randchoice(image_codes)}.png", ""

    for source in input_list:
        svar_dict['Books'].append(source)

    return f"!svar ibook_settings {dump_json(svar_dict)}", f"{ctx.author.display_name} adds to the server's sources", "**Served Sources:**\n" + "\n".join(input_list), f"https://raw.githubusercontent.com/SethHartman13/Magic-Book-Library/main/Code/Images/{randchoice([shorthand_items[source] for source in svar_dict['Books'] if source in shorthand_items])}.png", ""


def main(input_list: list[str]) -> str:
    if len(input_list) > 0:
        if (uvar_test := get_uvar("ibook_source_list")):
            uvar_list = load_json(uvar_test)

        else:
            return "", f"{ctx.author.display_name} has encountered an error", "You are not subscribed to any content", f'https://raw.githubusercontent.com/SethHartman13/Magic-Book-Library/main/Code/Images/no_wizard.png', "#cf142b"

    else:
        return "", f"{ctx.author.display_name} has encountered an error", "Expected at least one argument", f'https://raw.githubusercontent.com/SethHartman13/Magic-Book-Library/main/Code/Images/no_wizard.png', "#cf142b" 

    if "all" in input_list[0].lower():
        return add_to_svar_list(uvar_list, uvar_list)

    else:
        
        if (key_result := search_list(input_list[0], uvar_list)):
            if len(key_result) == 1:
                return add_to_svar_list(key_result, uvar_list)

            else:
                for key in key_result:
                    if key.lower() != input_list[0].lower():
                        pass

                    else:
                        return add_to_svar_list([key], uvar_list)

                key_result.insert(0, "**Multiple Sources Found:**")

                return "", f"{ctx.author.display_name} has encountered an error", "\n".join(key_result), f'https://raw.githubusercontent.com/SethHartman13/Magic-Book-Library/main/Code/Images/no_wizard.png', "#cf142b"

        else:
            return "", f"{ctx.author.display_name} has encountered an error", "Source not found", f'https://raw.githubusercontent.com/SethHartman13/Magic-Book-Library/main/Code/Images/no_wizard.png', "#cf142b"


svar_str, title, f, thumb, color = main(&ARGS&)
l = "<"

</drac2>
{{svar_str}}
!embed -title "{{title}}" -f "{{f}}" -thumb "{{thumb}}" -color "{{color}}" -footer "!ibook serve add [source/all] | Updated 11/16/23 | ShadowsStride"