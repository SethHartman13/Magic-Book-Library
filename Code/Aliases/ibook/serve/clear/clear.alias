multiline
<drac2>

def search_list(query: str, item_list: list[str]) -> list[str]|None:
    """
    Searches for item in list.

    Args:
        query (str): The query being made
        item_list (list): List of items

    Return:
        list[str]|None: If it finds at least one match, it returns the item(s) in a list, otherwise it returns None
    """

    # Finds at least 1 match
    if len(item_results := [item for item in item_list if query.lower() in item.lower()]) > 0:
        return item_results

    # If it finds no matches
    else:
        return None


def main(input_list: list[str]) -> str:

    # If we get at least one input
    if len(input_list) > 0:

        # If the SVAR exists, load it
        if (svar_test := get_svar("ibook_settings")):
            svar = load_json(svar_test)

        # If the SVAR does not exist
        else:
            return None, f"{ctx.author.display_name} has encountered an error", "SVAR has not been created"

    # If we get no inputs
    else:
        return None, f"{ctx.author.display_name} has encountered a warning", "Because this command clears the SVAR list of sources, please input 'confirm' to proceed"

    if len(svar['Books']) != 0:
        pass

    else:
        return None, f"{ctx.author.display_name} has encountered a error", "The server sourcebooks have already been cleared"

    if "confirm" in (join_str := "".join(input_list).lower()):
        svar['Books'] = []

        return f"{ctx.author.display_name} has attempted to clear the SVAR sourcebooks", f"!svar ibook_settings_backup {svar_test}", f"!svar ibook_settings {dump_json(svar)}"

    elif "undo" in join_str:
        
        if (svar_backup_test := get_svar('ibook_settings_backup')):
            svar_str1 = f"!svar ibook_settings_backup {svar_test}"

            svar_str2 = f"!svar ibook_settings {svar_backup_test}"

            return f"{ctx.author.display_name} has attempted to restore the SVAR sourcebooks from backup", f"!svar ibook_settings_backup {svar_test}", f"!svar ibook_settings {svar_backup_test}"

        else:
            return None, f"{ctx.author.display_name} has encountered an error", "There are no backups to restore"

    else:
        return None, f"{ctx.author.display_name} has encountered a warning", "Because this command clears the SVAR list of sources, please input 'confirm' to proceed"

title, svar_str1, svar_str2 = main(&ARGS&)

if title:
    f = ""
    color = ""
    thumb = f"https://raw.githubusercontent.com/SethHartman13/Magic-Book-Library/main/Code/Images/wizard_read_book{randchoice(['', 2, 3, 4, 5])}.png"

else:
    title = svar_str1
    f = svar_str2
    color = "#cc0202"
    thumb = "https://raw.githubusercontent.com/SethHartman13/Magic-Book-Library/main/Code/Images/no_wizard.png"

    svar_str1 = ""
    svar_str2 = ""

l = "<"


</drac2>
{{svar_str1}}
{{svar_str2}}
!embed -title "{{title}}" -f "{{f}}" -color "{{color}}" -thumb "{{thumb}}" -footer "!ibook serve {{l}}clear/confirm> | Updated 11/16/23 | ShadowsStride"