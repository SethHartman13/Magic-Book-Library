embed
<drac2>


def search_list(query: str, item_list: list[str]) -> list[str]|None:
    """
    Searches for item in list.

    Args:
        query (str): The query being made
        item_list (list): List of items

    Return:
        list[str]|None: If it finds at least one match, it returns the item(s) in a list, otherwise it returns None
    """

    # Finds at least 1 match
    if len(item_results := [item for item in item_list if query.lower() in item.lower()]) > 0:
        return item_results

    # If it finds no matches
    else:
        return None


def main(input_list: list[str]) -> str:
    """
    Main program function

    Args:
        input_list (list[str]): List of inputs from user

    Return:
        str: Results
    """

    # If there was at least one input
    if len(input_list) > 0:
        pass
    
    # If there were no inputs
    else:
        return None, "Expected at least one argument"
    
    # If UVAR exists, load list
    if (uvar_test := get_uvar("ibook_source_list")):
        uvar_list = load_json(uvar_test)

    # If UVAR does not exist
    else:
        return None, "UVAR does not exist"

    # Source mapping table
    source_mapping = {
        "Xanathar's Guide to Everything (xgte)": "xgte",
        "Tasha's Cauldron of Everything (tcoe)": "tcoe",
        "Sword Coast Adventurer's Guide (scag)": "scag",
        "Strixhaven: A Curriculum of Chaos (sais)": "sais",
        "Spelljammer Adventures in Space (sacoc)": "sacoc",
        "Player's Handbook (phb)": "phb",
        "Lost Laboratory of Kwalish (llok)": "llok",
        "Icewind Dale Rime of the Frostmaiden (idrotf)": "idrotf",
        "Guildmasters' Guide to Ravnica (ggtr)": "ggtr",
        "Fizban's Treasury of Dragons (ftod)": "ftod",
        "Elemental Evil Player's Companion (eepc)": "eepc",
        "Acquisitions Incorporated (ai)": "ai",
        "Basic Rules (br)": "br",
        "Explorer's Guide to Wildemount (egtw)": "egtw",
        "Tal'Dorei Campaign Setting Reborn (tcsr)": "tcsr"
    }

    # If it finds at least one match
    if (result_list := search_list(input_list[0], uvar_list)):

        # If it finds exactly one match
        if len(result_list) == 1:

            # Remove item and update UVAR
            uvar_list.remove(result_list[0])
            set_uvar("ibook_source_list", dump_json(uvar_list))

            # If source is official/partnered
            if result_list[0] in source_mapping.keys():
                return f"You have removed {result_list[0]} from your sourcebook list", "", f"https://raw.githubusercontent.com/SethHartman13/Magic-Book-Library/main/Code/Images/{source_mapping[result_list[0]]}.png", ""

            # If source is HB
            else:
                return f"You have removed {result_list[0]} from your sourcebook list", "", f"https://raw.githubusercontent.com/SethHartman13/Magic-Book-Library/main/Code/Images/{randchoice(['xgte', 'tcoe', 'scag', 'sais', 'sacoc', 'phb', 'llok', 'idrotf', 'ggtr', 'ftod', 'eepc', 'ai', 'br', 'egtw', 'tcsr'])}.png", ""

        # If it finds more than one match
        else:

            # Searches through all the matches, trying to find an exact match
            for item in result_list:

                # If not an exact match
                if item.lower() != input_list[0].lower():
                    pass

                # If an exact match
                else:

                    # Remove item and update UVAR
                    uvar_list.remove(item)
                    set_uvar("ibook_source_list", dump_json(uvar_list))

                    # If source is official/partnered
                    if item in source_mapping.keys():
                        return f"You have removed {item} from your sourcebook list", "", f"https://raw.githubusercontent.com/SethHartman13/Magic-Book-Library/main/Code/Images/{source_mapping[item]}.png", ""

                    # If source is HB
                    else:
                        return f"You have removed {item} from your sourcebook list", "", f"https://raw.githubusercontent.com/SethHartman13/Magic-Book-Library/main/Code/Images/{randchoice(['xgte', 'tcoe', 'scag', 'sais', 'sacoc', 'phb', 'llok', 'idrotf', 'ggtr', 'ftod', 'eepc', 'ai', 'br', 'egtw', 'tcsr'])}.png", ""
            
            result_list.insert(0, "**Multiple Matches Found:**")

            return None, "\n".join(result_list)

    # If it finds no matches
    else:
        return "You Have Been Sneak Attacked by an Error", "Spell not found", "https://raw.githubusercontent.com/SethHartman13/Magic-Book-Library/main/Code/Images/no_wizard.png", "#CF142B"


# Main program function
title, f, thumb, color = main(&ARGS&)


</drac2>
-title "{{title}}"
-f "{{f}}"
-thumb "{{thumb}}"
-color "{{color}}"
-footer "{{ctx.prefix}}ibook unsub [source name] | Updated 12/11/23 | ShadowsStride"