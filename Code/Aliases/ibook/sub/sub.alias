embed
<drac2>


def add_to_uvar(add_string: str, uvar_list: list[str]) -> str:
    
    if (svar_test := get_svar(add_string)):
        uvar_list.append(add_string)

    else:
        if (gvar_test := get_gvar(add_string)):
            uvar_list.append(add_string)

        else:
            return f"{ctx.author.display_name} has encountered an error", f"`{add_string}` GVAR/SVAR not found", "https://raw.githubusercontent.com/SethHartman13/Magic-Book-Library/main/Code/Images/ibook_error.png", "#cc0202"  

    set_uvar('ibook_source_list', dump_json(uvar_list))

    return f"{ctx.author.display_name} has added a SVAR/GVAR to their sourcebook list", "", f"https://raw.githubusercontent.com/SethHartman13/Magic-Book-Library/main/Code/Images/{randchoice(['ai', 'eepc', 'egtw', 'ftod', 'ggtr', 'idrotf', 'llok', 'phb', 'sais', 'sacoc', 'scag', 'tcsr', 'tcoe', 'xgte'])}.png", ""


def output_sub_list(page_num: int, uvar_list: list[str]) -> str:

    items = {
        "Acquisition's Incorporated (ai)": "`!ibook sub ai`: Subscribes to Acquisition's Incorporated",
        "Elemental Evil Player's Companion (eepc)": "`!ibook sub eepc`: Subscribes to Elemental Evil Player's Companion",
        "Explorer's Guide to Wildemount (egtw)": "`!ibook sub egtw`: Subscribes to Explorers Guide to Wildemount",
        "Fizban's Treasury of Dragons (ftod)": "`!ibook sub ftod`: Subscribes to Fizban's Treasury of Dragons",
        "Guildmasters' Guide to Ravnica (ggtr)": "`!ibook sub ggtr`: Subscribes to Guildmaster's Guide to Ravnica",
        "Icewind Dale Rime of the Frostmaiden (idrotf)": "`!ibook sub idrotf`: Subscribes to Icewind Dale: Rime of the Frostmaiden",
        "Lost Laboratory of Kwalish (llok)": "`!ibook sub llok`: Subscribes to Lost Laboratory of Kwalish",
        "Player's Handbook (phb)": "`!ibook sub phb`: Subscribes to the Player's Handbook",
        "Spelljammer Adventures in Space (sacoc)": "`!ibook sub sacoc`: Subscribes to Strixhaven: A Curriculum of Chaos",
        "Strixhaven: A Curriculum of Chaos (sais)": "`!ibook sub sais`: Subscribes to Strixhaven: A Curriculum of Chaos",
        "Sword Coast Adventurer's Guide (scag)": "`!ibook sub scag`: Subscribes to Sword Coast Adventurer's Guide",
        "Tasha's Cauldron of Everything (tcoe)": "`!ibook sub tcoe`: Subscribes to Tasha's Cauldron of Everything",
        "Tal'Dorei Campaign Setting Reborn (tcsr)": "`!ibook sub tcsr`: Subscribes to Tal'Dorei Campaign Setting Reborn",
        "Xanathar's Guide to Everything (xgte)": "`!ibook sub xgte`: Subscribes to Xanathar's Guide to Everything" 
    }

    shorthand_items = {
        "Acquisition's Incorporated (ai)": "ai",
        "Elemental Evil Player's Companion (eepc)": "eepc",
        "Explorer's Guide to Wildemount (egtw)": "egtw",
        "Fizban's Treasury of Dragons (ftod)": "ftod",
        "Guildmasters' Guide to Ravnica (ggtr)": "ggtr",
        "Icewind Dale Rime of the Frostmaiden (idrotf)": "idrotf",
        "Lost Laboratory of Kwalish (llok)": "llok",
        "Player's Handbook (phb)": "phb",
        "Spelljammer Adventures in Space (sacoc)": "sacoc",
        "Strixhaven: A Curriculum of Chaos (sais)": "sais",
        "Sword Coast Adventurer's Guide (scag)": "scag",
        "Tasha's Cauldron of Everything (tcoe)": "tcoe",
        "Tal'Dorei Campaign Setting Reborn (tcsr)": "tcsr",
        "Xanathar's Guide to Everything (xgte)": "xgte" 
    }

    display_list = [items[key] for key in items.keys() if key not in uvar_list]
    shorthand_list = [shorthand_items[key] for key in items.keys() if key not in uvar_list]

    result_list = [display_list[i:i+4] for i in range(0,len(display_list), 4)]
    short_list = [shorthand_list[i:i+4] for i in range(0,len(shorthand_list), 4)]

    if page_num > 1 and (res_length := len(result_list)):

        if page_num < res_length:
            pass

        else:
            page_num = res_length

    else:
        page_num = 1

    if len(result_list) > 0:
        res_length = len(result_list)

    else:
        result_list.append(['None'])
        short_list.append(['ai', 'eepc', 'egtw', 'ftod', 'ggtr', 'idrotf', 'llok', 'phb', 'sais', 'sacoc', 'scag', 'tcsr', 'tcoe', 'xgte'])
        page_num = 1
        res_length = 1

    result_list[page_num-1].insert(0, f"**Available Sourcebooks: ({page_num}/{res_length})**")

    return f"{ctx.author.display_name} checks what they can subscribe to", "\n\n".join(result_list[page_num-1]), f"https://raw.githubusercontent.com/SethHartman13/Magic-Book-Library/main/Code/Images/{randchoice(short_list[page_num-1])}.png", ""


def main(input_list: list[str]) -> str:

    if (uvar_test := get_uvar("ibook_source_list")):
        uvar_list = load_json(uvar_test)

    else:
        uvar_list = []

    

    if len(input_list) > 0:
        try:
            return output_sub_list(int(input_list[0]), uvar_list)

        except:
            return add_to_uvar(input_list[0], uvar_list)

    else:
        return output_sub_list(1, uvar_list) 


title, f, thumb, color = main(&ARGS&)
l = "<"

</drac2>
-title "{{title}}"
-f "{{f}}"
-thumb "{{thumb}}"
-color "{{color}}"
-footer "!ibook sub {{l}}#/GVAR/SVAR> | Updated 11/15/23 | ShadowsStride"