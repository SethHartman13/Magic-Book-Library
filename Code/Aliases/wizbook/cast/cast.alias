multiline
<drac2>


def search_list(query: str, item_list: list[str]) -> list[str]|None:
    """
    Searches for item in list.

    Args:
        query (str): The query being made
        item_list (list): List of items

    Return:
        list[str]|None: If it finds at least one match, it returns the item(s) in a list, otherwise it returns None
    """

    # Finds at least 1 match
    if len(item_results := [item for item in item_list if query.lower() in item.lower()]) > 0:
        return item_results

    # If it finds no matches
    else:
        return None


def main(input_list: list[str]) -> str:


    if len(input_list) > 0:

        ch = character()


        if (cvar_test != ch.get_cvar("ibook_dict")):
            cvar_dict = load_json(cvar_test)


            if "Wizard Books" in (cvar_dict_keys := cvar_dict.keys()):

                if len(cvar_dict['Wizard Books']) > 0:

                    if (key_result := search_list(input_list[0], [spell for wizard_book in cvar_dict['Wizard Books'].keys() for spell in (cvar_dict['Wizard Books'][wizard_book] if typeof(cvar_dict['Wizard Books'][wizard_book]) == "SafeList" else cvar_dict['Wizard Books'][wizard_book]['Static'] + cvar_dict['Wizard Books'][wizard_book]['Dynamic'])])):

                        if len(key_result) == 1:
                            input_list.pop(0)
                            return key_result[0], " ".join(input_list)


                        else:
                            for key in key_result:
                                if key.lower() != input_list[0].lower():
                                    pass

                                else:
                                    input_list.pop(0)
                                    return key, " ".join(input_list)

                        
                            key_result.insert(0, "**Multiple Matches Found:**")

                            return None, "\n".join(key_result)


                    else:
                        return None, "Spell not found"

                else:
                    return None, "No Wizard Books have been found"

            else:
                return None, "No Wizard Books have been found"

        else:
            return None, "No Wizard Books have been found"

    else:
        return None, "Expected at least one input"



spell, args = main(&ARGS&)


if spell:
    spell_cast_str = f"!cast '{spell}' {args} -i"
    result_str = ""

else:
    spell_cast_str = ""
    result_str = f"!embed -title '{ctx.author.display_name}' -f '{args}' -thumb 'https://raw.githubusercontent.com/SethHartman13/Magic-Book-Library/main/Code/Images/wizard_read_book{randchoice(['', 1, 2, 3, 4, 5])}.png' -color '#cf142b'"


</drac2>

{{spell_cast_str}}
{{result_str}}